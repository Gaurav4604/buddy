
            <text>
            Sometimes we do not want to include the empty string in the set. The set of non-empty strings is denoted by Σ^+. This is often referred to as the Kleene plus, by analogy with the Kleene star.
            </text>
            

            <formula>
            Σ^+ = Σ^1∪Σ^2∪Σ^3∪…
            </formula>
            

            <text>
            And ∑^⋆=ϵ∪Σ^+.
            </text>
            

            <formula>
            ∑^⋆ = {ϵ}∪Σ^+
            </formula>
            

            <title>
            # Concatenating strings


    Let  S = ⋃_i=1^n A_i 
           where each  A_i ⊆ X. 
           We want to show that  S  is a subset of the union of all subsets.



            </title>
            

            <text>
            Let s be the string composed of the m symbols s₁s₁s₂⋯ sₘ, and t be the string composed of the n symbols t₁t₁t₂⋯ tₙ. The _concatenation_ of the strings s and t, denoted by st, is the string of length m+n, composed of the symbols s₁s₂s₂⋯ sₘt₁t₁t₂⋯ tₙ.

It is clear that the string ϵ can be concatenated with any other string s and that: ϵs = sϵ = s. ϵ thus behaves as the _identity value_, for concatenation.
            </text>
            

            <title>
            0.5.3 Lang14885
0.5.3. Languages
            </title>
            

            <text>
            A set of strings, all of which have been chosen from Σ* of an alphabet Σ, is called a language. If Σ is an alphabet, and L⊆Σ*, then L is said to be a language over Σ.

A language over Σ does not need to include strings with all the symbols of Σ. The implication of this is that when we know that L is a language over Σ, then L is also a language over any alphabet that is a superset of Σ.

The use of the word “language” here is entirely consistent with everyday usage. For example, the language “English” can be considered to be a set of strings drawn from the alphabet of Roman letters.

The programming language Java, or indeed any other programming language, is another example. The set of syntactically-correct programs is the set of strings that can be formed from the alphabet of the language (the ASCII characters).

Using the alphabets we defined earlier, we can specify some languages that might be of interest to us:
            </text>
            

            <text>
            1. The language consisting of valid binary byte-values (a string of 8 0’s or 1’s): 00000000, 00000001, —, 11111111 This is just Σ°.
2. The set of even-parity binary numbers (having an even number of 1’s), whose first digit is a 1: 11, 101, 110, 1001, 1010, 1100, 1111,—
3. The set of valid compass directions: N,S,E, W, NE, NW, SE, SW, NNE, ENE,—
4. Σ* is a language over an alphabet Σ.
5. e, the language consisting only of the empty string, is a language over any alphabet. This language has just one string: e.
6. Q, the language with no strings, is a language over any alphabet. Note that Q ≠ e, because e contains one string.
            </text>
            

            <text>
            Notice also that an alphabet Σ is always of a finite size, but a language over that alphabet can either be of finite or of infinite size.
            </text>
            
